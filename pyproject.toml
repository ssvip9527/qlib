[build-system]
requires = ["setuptools", "cython", "numpy>=1.24.0"]
build-backend = "setuptools.build_meta"

[project]
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS",
  "License :: OSI Approved :: MIT License",
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
name = "pyqlib"
dynamic = ["version"]
description = "A Quantitative-research Platform"
requires-python = ">=3.8.0"
readme = {file = "README.md", content-type = "text/markdown"}

dependencies = [
  "pyyaml",
  "numpy",
  "pandas>=0.24",
  # 我遇到了一个错误，在 mlflow 3.1.1 下载 artifacts 时 set_uri 不起作用；
  # 但较早版本的 mlflow 没有这个问题。
  # 但当我切换到 2.*.* 版本时，又出现了另一个更奇怪的错误……
  "mlflow",
  "filelock>=3.16.0",
  "redis",
  "dill",
  "fire",
  "ruamel.yaml>=0.17.38",
  "python-redis-lock",
  "tqdm",
  "pymongo",
  "loguru",
  "lightgbm",
  "gym",
  "cvxpy",
  "joblib",
  "matplotlib",
  "jupyter",
  "nbconvert",
  "pyarrow",
  "pydantic-settings",
]

[project.optional-dependencies]
dev = [
  "pytest",
  "statsmodels",
]
# 在 macos-13 系统上，当 Python 版本大于等于 3.10 时，
# pytorch 无法完全支持 Numpy 2.0 以上版本，因此安装 torch 时，
# 会限制 Numpy 版本低于 2.0。
rl = [
  "tianshou<=0.4.10",
  "torch",
  "numpy<2.0.0",
]
lint = [
  "black",
  "pylint",
  "mypy<1.5.0",
  "flake8",
  "nbqa",
]
# snowballstemmer 是 sphinx 的依赖包，于 2025-05-08 发布了 3.0.0 版本，
# 导致构建过程出错，因此目前限制了其版本。
docs = [
  # 升级 scipy 到 1.16.0 后，
  # 构建文档时遇到 ImportError: cannot import name '_lazywhere'，
  # 所以我们将 scipy 版本限制为：1.15.3
  "scipy<=1.15.3",
  "sphinx",
  "sphinx_rtd_theme",
  "readthedocs_sphinx_ext",
  "snowballstemmer<3.0",
]
package = [
  "twine",
  "build",
]
# test_pit 依赖包
 test = [
  "yahooquery",
  "baostock",
]
analysis = [
  "plotly",
  "statsmodels",
]

[tool.setuptools]
packages = [
  "qlib",
]

[project.scripts]
qrun = "qlib.workflow.cli:run"
